
[Average Score Trend]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.page.search.mode = verbose
display.page.search.tab = visualizations
display.visualizations.charting.chart = line
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = index=sami_summary | bin _time span=1d | stats count as penaltyCount by orig_host, measure, penalty, metric, _time | eval time=strftime(_time,"%y-%m-%d") | eval score=max(0.0001,((pow(100-penalty,penaltyCount)/pow(100,penaltyCount))))| stats sum(eval(ln(score))) as sumLogScores by orig_host, metric, time | eval TotalScore=round(1+9*exp(sumLogScores),3) | chart avg(TotalScore) AS "Average Score" by  time, metric

[Penalties_List]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = |inputlookup SAMIPenaltiesLookup | table metric, category, measure, description, penalty, reason

[AW_Skip_Category_lookup]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SRP_BLACKLIST_RULE_MISSING
action.summary_index.metric = AW
alert.digest_mode = True
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 4 * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = index=sami_summary metric=AW | rename orig_host as host | eval host=upper(host) | lookup OSLookup host as host output osVersion,osRole |  rex field=measure "(?<AW_Cat>SRP|APPLOCKER)_.*" | stats count as penaltyCount by host, measure, penalty, AW_Cat  | eval score=max(0.0001,((pow(100-penalty,penaltyCount)/pow(100,penaltyCount)))) | stats sum(eval(ln(score))) as sumLogScores by host, AW_Cat | eval TotalScore=round(1+9*exp(sumLogScores),3) | sort host, TotalScore, -AW_Cat | dedup host | eval skip_aw_cat=AW_Cat | table host, skip_aw_cat | outputlookup AW_Category_Skip_lookup.csv

[OS_LOOKUP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * 6
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WMI:OperatingSystem" | dedup host | eval host=upper(host) | eval osRole=case(ProductType=1,"Workstation",ProductType=2,"DomainController",ProductType=3,"Server") | rex field=Version "(?<osVersion>\d*\.\d*)\.\d*" | join type=outer host [search sourcetype="WMI:Processor" | fields host,Architecture | dedup host | eval host=upper(host) | eval osArch=case(Architecture=0,"32",Architecture=6,"64",Architecture=9,"64") ] | rename ServicePackMajorVersion as ServicePack, _time as lastUpdate | table host, osVersion, ServicePack, osRole, osArch, lastUpdate | outputlookup os_lookup.csv

[OSPD_NO_OS_PATCHES]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup HostList\
| join type=outer host [search sourcetype=WMI:QFE Description=* | stats count AS patches by host] | fillnull patches\
| eval measure="NO_OS_PATCHES" | `penalty_lookup` | eval penalty=if(patches==0,penalty_value,0)\
| eval item=if(patches==0,"No patches","Has patches") | table host item penalty

[OSPD_NO_OS_SECURITY_PATCHES]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup HostList\
| join type=outer host [search sourcetype=WMI:QFE Description=Security* | stats count AS patches by host] | fillnull patches\
| eval measure="NO_OS_SECURITY_PATCHES" | `penalty_lookup` | eval penalty=if(patches==0,penalty_value,0)\
| eval item=if(patches==0,"No security patches","Has security patches") | table host item penalty

[OSPD_OLD_OS_SECURITY_PATCH_AVERAGE_DAYS]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WMI:QFE Description=Security* | dedup host, InstalledOn | rex mode=sed field=InstalledOn "s/^(\d\/\d{1,2}\/\d{4})/0\1/" | eval InstalledOn=strptime(InstalledOn,"%m/%d/%Y") | delta InstalledOn as daysBetweenPatches | eval daysBetweenPatches=-1*(daysBetweenPatches/86400) | where daysBetweenPatches>0 | stats avg(daysBetweenPatches) AS avgDays by host | eval avgDays=round(avgDays,0)\
| eval measure="OLD_OS_SECURITY_PATCH_AVERAGE_DAYS" | `penalty_lookup` | eval penalty=if(avgDays>51,penalty_value,0)\
| eval item="Average days between patches:"+avgDays | table host item penalty

[OSPD_OLD_OS_SECURITY_PATCH_DATE]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WMI:QFE Description=Security* | dedup host | rex mode=sed field=InstalledOn "s/^(\d\/\d{1,2}\/\d{4})/0\1/" | eval daysSincePatch=round((now() - strptime(InstalledOn,"%m/%d/%Y"))/86400,0)\
| eval measure="OLD_OS_SECURITY_PATCH_DATE" | `penalty_lookup` | eval penalty=if(daysSincePatch>37,penalty_value,0)\
| eval item="Days since last security patch:"+daysSincePatch | table host item penalty

[AVFRS_VSE_NOT_INSTALLED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = VSE_NOT_INSTALLED
action.summary_index.metric = AVFRS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 36 0 * * *
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WinHostMon Name=McShield | dedup host\
| join type=outer host [search sourcetype="WinRegistry" key_path="*SOFTWARE\\*MCAFEE\\AVEngine*" | dedup host]\
| eval measure="VSE_NOT_INSTALLED" | `penalty_lookup`\
| eval penalty=if(isnotnull(key_path) AND isnotnull(Name),0,penalty_value)\
| eval item=case(isnotnull(key_path) AND isnotnull(Name),"VSE Installed",isnull(key_path) AND isnotnull(Name),"Registry Key Not Found",isnotnull(key_path) AND isnull(Name),"McShield Service Not Found",isnull(key_path) AND isnull(Name),"Registry Key and McShield Service Missing")\
| eval _time=now()\
| table host, item, penalty _time

[Measure Findings Host Count]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = -4d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = index=sami_summary penalty>0 | eval age=now()-info_search_time | search age<86400 | stats dc(orig_host) as hostCount by metric, measure, penalty | sort -penalty, -hostCount

[AE_ABLE_TO_MAP_NULL_PAGE]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ABLE_TO_MAP_NULL_PAGE
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=scriptAE ableToMapNullPage=* | dedup host | eval measure="ABLE_TO_MAP_NULL_PAGE" | `penalty_lookup` | eval penalty=if(upper(ableToMapNullPage)=="TRUE",penalty_value,0) | eval item="ableToMapNullPage:"+ableToMapNullPage | eval _time=now() | table host item penalty _time

[AE_CERTPADDING_NOT_PRESENT]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = CERTPADDING_NOT_PRESENT
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 10 0 * * *
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup HostList\
| join type=outer host [search sourcetype=WMI:QFE | stats values(HotFixID) AS hotfixes BY host]\
| eval measure="CERTPADDING_NOT_PRESENT" | `penalty_lookup`\
| eval hasKB2893294=if(match(hotfixes,"KB2893294"),"TRUE","FALSE") | eval hasKB2919355=if(match(hotfixes,"KB2919355"),"TRUE","FALSE")\
| eval penalty=if(isnull(hotfixes) OR (hasKB2893294=="FALSE" AND hasKB2919355=="FALSE"),penalty_value,0)\
| eval item="Has Hotfix KB2893294:"+hasKB2893294+", Has Hotfix KB2919355:"+hasKB2919355 | eval _time=now() | table host item penalty _time

[AE_FONT_BLOCKING_NOT_CONFIGURED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = FONT_BLOCKING_NOT_CONFIGURED
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 20 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup HostList\
| join type=outer host [search sourcetype=WinRegistry key_path="*SOFTWARE\\POLICIES\\MICROSOFT\\WINDOWS\\MitigationOptions\\MitigationOptions_FontBocking" | eval fontBlocking=data]\
| eval measure="FONT_BLOCKING_NOT_CONFIGURED" | `penalty_lookup` | eval penalty=if(isnull(fontBlocking),penalty_value,0) \
| fillnull value="UNKNOWN" fontBlocking\
| eval item=fontBlocking | eval _time=now() | table host item penalty _time

[AE_FONT_BLOCKING_MO_IS_DISABLED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = FONT_BLOCKING_MO_IS_DISABLED
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 15 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel\\MitigationOptions" | dedup host | eval mitigationOptions=data\
| rex field=mitigationOptions "0x\d*(?<mitigationOptionsValue>\d)\d{12}"\
| eval measure="FONT_BLOCKING_MO_IS_DISABLED" | `penalty_lookup` | eval penalty=if(mitigationOptionsValue!=1,penalty_value,0)\
| eval item=mitigationOptions | eval _time=now() | table host item penalty _time

[AE_DEP_TOO_LOW]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 15 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\SystemStartOptions*" | dedup host | rex field=data ".*=(?<depPolicy>\w+)"\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel\\MitigationOptions" | eval depMitOps=data | rex field=depMitOps "0x\d*(?<depMitOpsValue>\d)"] | fillnull value="UNKNOWN" depMitOps\
| where isnotnull(depPolicy)\
| eval measure="DEP_TOO_LOW32" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS tooLow32Penalty\
| eval measure="DEP_TOO_LOW" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS tooLowPenalty\
| lookup OSLookup host AS host OUTPUT osArch AS osArch | fillnull osArch\
| eval measure=mvappend("DEP_TOO_LOW","DEP_TOO_LOW32") | mvexpand measure\
| eval penalty=if((depMitOpsValue%4==0 OR isnull(depMitOpsValue)) AND (depPolicy=="OPTIN" OR depPolicy=="OPTOUT"), if(osArch!=64 AND measure=="DEP_TOO_LOW",tooLowPenalty,if(measure=="DEP_TOO_LOW32",tooLow32Penalty,0)),0)\
| eval item="DEP Policy:"+depPolicy+", MitigationOptions:"+depMitOps | eval _time=now() | table measure host item penalty _time

[AE_DEP_DISABLED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 15 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\SystemStartOptions*" | dedup host | rex field=data ".*=(?<depPolicy>\w+)"\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel\\MitigationOptions" | eval depMitOps=data | rex field=depMitOps "0x\d*(?<depMitOpsValue>\d)\(\d*\)"] | fillnull value="UNKNOWN" depMitOps\
| where isnotnull(depPolicy)\
| eval measure="DEP_DISABLED32" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS disabled32Penalty\
| eval measure="DEP_DISABLED" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS disabledPenalty\
| lookup OSLookup host AS host OUTPUT osArch AS osArch | fillnull osArch\
| eval measure=mvappend("DEP_DISABLED","DEP_DISABLED32") | mvexpand measure\
| eval penalty=if(depMitOpsValue%4==2 OR ((depMitOpsValue%4==0 OR isnull(depMitOpsValue)) AND depPolicy=="ALWAYSOFF"),if(osArch!=64 AND measure=="DEP_DISABLED",disabledPenalty,if(measure=="DEP_DISABLED32",disabled32Penalty,0)),0)\
| eval item="DEP Policy:"+depPolicy+", MitigationOptions:"+depMitOps | eval _time=now() | table measure host item penalty _time

[AE_HW_NO_SMAP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = HW_NO_SMAP
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 20 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=scriptAE smapHardwareSupport=* | dedup host\
| eval measure="HW_NO_SMAP" | `penalty_lookup` | eval penalty=if(upper(smapHardwareSupport)=="FALSE",penalty_value,0) \
| eval item=smapHardwareSupport | eval _time=now() | table host, item, penalty _time

[AE_HW_NO_SMEP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = HW_NO_SMEP
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 20 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=scriptAE smepHardwareSupport=* | dedup host\
| eval measure="HW_NO_SMEP" | `penalty_lookup` | eval penalty=if(upper(smepHardwareSupport)=="FALSE",penalty_value,0) \
| eval item=smepHardwareSupport | eval _time=now() | table host, item, penalty _time

[AE_HW_OUTDATED_FOR_DEP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = HW_OUTDATED_FOR_DEP
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 20 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=scriptAE paeHardwareSupport=* | dedup host | join type=outer host [search sourcetype=scriptAE nxHardwareSupport=* | fields host nxHardwareSupport]\
| lookup OSLookup host AS host OUTPUT osArch\
| eval measure="HW_OUTDATED_FOR_DEP" | `penalty_lookup` | eval penalty=if(upper(nxHardwareSupport)=="FALSE" AND (upper(paeHardwareSupport)!="FALSE" OR osArch!=64),penalty_value,0) \
| eval item="PAE:"+paeHardwareSupport+", NX:"+nxHardwareSupport+", OSArch:"+osArch | eval _time=now() | table host, item, penalty _time

[AE_LEGACY_BIOS]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = LEGACY_BIOS
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 25 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=scriptAE firmwareMode=* | dedup host\
| eval measure="LEGACY_BIOS" | `penalty_lookup` | eval penalty=if(upper(firmwareMode)=="LEGACY",penalty_value,0) \
| eval item=firmwareMode | eval _time=now() | table host, item, penalty _time

[AE_OS_OUTDATED_FOR_ASLR]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = OS_OUTDATED_FOR_ASLR
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 30 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup | eval measure="OS_OUTDATED_FOR_ASLR" | `penalty_lookup` | eval penalty=case(osVersion<5.1,penalty_value,osVersion==5.1 AND ServicePack<2 AND osRole!="Server",penalty_value,osVersion==5.2 AND ServicePack<2 AND osRole!="Server",penalty_value,osVersion==5.2 AND ServicePack<1 AND osRole=="Server",penalty_value,1=1,0) \
| eval item="Version "+osVersion+" - ServicePack "+ServicePack+" - Role "+osRole | eval _time=now() | table host, item, penalty _time

[AE_OS_OUTDATED_FOR_CFG]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = OS_OUTDATED_FOR_CFG
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 30 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup | eval measure="OS_OUTDATED_FOR_CFG" | `penalty_lookup` | eval penalty=if(osVersion<6.3,penalty_value,0) | eval item="Version "+osVersion | eval _time=now() | table host, item, penalty _time

[AE_OS_OUTDATED_FOR_DEP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = OS_OUTDATED_FOR_DEP
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 30 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup | eval measure="OS_OUTDATED_FOR_DEP" | `penalty_lookup` | eval penalty=\
if(osVersion<5.1, penalty_value, \
if(osVersion==5.1 AND ServicePack<2 AND osRole!="Server",penalty_value, \
if(osVersion==5.2 AND ServicePack<2 AND osRole!="Server",penalty_value,\
if(osVersion==5.2 AND ServicePack<1 AND osRole=="Server",penalty_value, 0)))) \
| eval item="Version "+osVersion+" - ServicePack "+ServicePack+" - "+osRole | eval _time=now() | table host, item, penalty _time

[AE_OS_OUTDATED_FOR_FONT_BLOCKING]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = OS_OUTDATED_FOR_FONT_BLOCKING
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 35 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup | eval measure="OS_OUTDATED_FOR_FONT_BLOCKING" | `penalty_lookup` | eval penalty=if(osVersion>=10,0,penalty_value) \
| eval item=osVersion | eval _time=now() | table host, item, penalty _time

[AE_OS_OUTDATED_FOR_KSEHOP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = OS_OUTDATED_FOR_KSEHOP
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 35 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup | eval measure="OS_OUTDATED_FOR_KSEHOP" | `penalty_lookup` | eval penalty=if(osVersion<6.3,penalty_value,0) | eval item="Version "+osVersion | eval _time=now() | table host, item, penalty _time

[AE_OS_NO_SECURE_BOOT]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = OS_NO_SECURE_BOOT
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 25 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup | eval measure="OS_NO_SECURE_BOOT" | `penalty_lookup` | eval penalty=if(osVersion>=6.2,0,penalty_value) \
| eval item=osVersion | eval _time=now() | table host, item, penalty _time

[AE_OS_NO_SMAP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = OS_NO_SMAP
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 30 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup| eval measure="OS_NO_SMAP" | `penalty_lookup` | eval penalty=if(osVersion>=6.2,0,penalty_value) \
| eval item=osVersion | eval _time=now() | table host, item, penalty _time

[AE_OS_NO_SMEP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = OS_NO_SMEP
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 30 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup | eval measure="OS_NO_SMEP" | `penalty_lookup` | eval penalty=if(osVersion>=6.2,0,penalty_value) \
| eval item=osVersion | eval _time=now() | table host, item, penalty _time

[AE_OS_OUTDATED_FOR_NULL_PAGE_PROTECTION]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = OS_OUTDATED_FOR_NULL_PAGE_PROTECTION
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 35 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup | eval measure="OS_OUTDATED_FOR_NULL_PAGE_PROTECTION" | `penalty_lookup` | eval penalty=if(osVersion<6.1,penalty_value,0) | eval item="Version "+osVersion | eval _time=now() | table host, item, penalty _time

[AE_OS_OUTDATED_FOR_SECURE_SEARCH_PATH]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = OS_OUTDATED_FOR_SECURE_SEARCH_PATH
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 35 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup | eval measure="OS_OUTDATED_FOR_SECURE_SEARCH_PATH" | `penalty_lookup`\
| eval penalty=if(osVersion<5.1 OR (osVersion==5.1 AND ServicePack<3),penalty_value,0)\
| eval item="OS Version:"+osVersion+", Service Pack:"+ServicePack | eval _time=now() | table host, item, penalty _time

[AE_OS_OUTDATED_FOR_SEHOP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = OS_OUTDATED_FOR_SEHOP
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 40 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup | eval measure="OS_OUTDATED_FOR_SEHOP" | `penalty_lookup` | eval penalty=case(osVersion<6.0,penalty_value,osVersion==6.0 AND ServicePack==0,penalty_value,1=1,0) | eval item="Version "+osVersion+" - ServicePack "+ServicePack | eval _time=now() | table host, item, penalty _time

[AE_SECURE_BOOT_NOT_ENABLED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SECURE_BOOT_NOT_ENABLED
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 40 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=scriptAE firmwareMode=* | dedup host\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\CONTROL\\SecureBoot\\State\\UEFISecureBootEnabled" | eval secureBootEnabled=data] | fillnull secureBootEnabled\
| eval measure="SECURE_BOOT_NOT_ENABLED" | `penalty_lookup` \
| eval penalty=if(upper(firmwareMode)=="UEFI" AND secureBootEnabled==0,penalty_value,0) \
| eval item="BIOS Mode: "+firmwareMode+", Secure Boot: "+secureBootEnabled | eval _time=now() | table host, item, penalty _time

[AE_OS_OUTDATED_FOR_MANDATORY_ASLR]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = OS_OUTDATED_FOR_MANDATORY_ASLR
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 35 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup | eval measure="OS_OUTDATED_FOR_MANDATORY_ASLR" | `penalty_lookup` | eval penalty=if(osVersion<6.0,penalty_value,0) | eval item="Version "+osVersion+" - ServicePack "+ServicePack+" - "+osRole | eval _time=now() | table host, item, penalty _time

[AE_SEHOP_NOT_CONFIGURED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SEHOP_NOT_CONFIGURED
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 40 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel\\MitigationOptions" | dedup host | eval mitOps=data | rex field=mitOps "0x\d*(?<mitOpsValue>\d)\d\(\d*\)"\
| lookup OSLookup host AS host OUTPUT osVersion\
| eval measure="SEHOP_NOT_CONFIGURED" | `penalty_lookup`\
| eval penalty=if((isnull(osVersion) OR osVersion>=6.2) AND mitOpsValue%4==0,penalty_value,0) \
| fillnull value="UNKNOWN" mitOps | eval item="Version:"+osVersion+", MitigationOptions:"+mitOps | eval _time=now() | table host, item, penalty _time

[AE_SEHOP_NOT_PRESENT]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SEHOP_NOT_PRESENT
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 45 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup HostList \
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel\\MitigationOptions" | dedup host | eval mitOps=data]\
| lookup OSLookup host AS host OUTPUT osVersion\
| eval measure="SEHOP_NOT_PRESENT" | `penalty_lookup`\
| eval penalty=if((isnull(osVersion) OR osVersion>=6.2) AND isnull(mitOps),penalty_value,0) \
| fillnull value="UNKNOWN" mitOps osVersion | eval item="Version:"+osVersion+", MitigationOptions:"+mitOps | eval _time=now() | table host, item, penalty _time

[AE_SEHOP_OVERRIDDEN_FOR_APP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SEHOP_OVERRIDDEN_FOR_APP
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 45 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WinRegistry key_path="*SOFTWARE\\*Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options*MitigationOptions" | eval key_path=upper(key_path) | dedup host key_path | eval mitOps=data | rex field=mitOps "0x\d*(?<mitOpsValue>\d)\d\(\d*\)" | rex field=key_path ".*\\\(?<appName>[^\\\]*)\\\MITIGATIONOPTIONS" \
| lookup OSLookup host AS host OUTPUT osVersion\
| eval measure="SEHOP_OVERRIDDEN_FOR_APP" | `penalty_lookup`\
| eval penalty=if((isnull(osVersion) OR osVersion>=6.2) AND mitOpsValue%4!=1,penalty_value,0)\
| eval item=appName | eval _time=now() | table host, item, penalty _time

[AE_SSP_NOT_ENABLED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SSP_NOT_ENABLED
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 45 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup HostList\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\CWDIllegalInDllSearch" | dedup host | eval cwdIllegalInDLLSearch=data]\
| eval measure="SSP_NOT_ENABLED" | `penalty_lookup`\
| eval penalty=if(cwdIllegalInDLLSearch!=2,penalty_value,0)\
| fillnull value="UNKNOWN" cwdIllegalInDLLSearch | eval item=cwdIllegalInDLLSearch | eval _time=now() | table host, item, penalty _time

[AE_SSP_NOT_EXIST]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SSP_NOT_EXIST
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 45 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup HostList\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\CWDIllegalInDllSearch" | dedup host | eval cwdIllegalInDLLSearch=data]\
| eval measure="SSP_NOT_EXIST" | `penalty_lookup`\
| eval penalty=if(isnull(cwdIllegalInDLLSearch),penalty_value,0)\
| fillnull value="UNKNOWN" cwdIllegalInDLLSearch | eval item=cwdIllegalInDLLSearch | eval _time=now() | table host, item, penalty _time

[AE_SSP_NOT_PRESENT]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SSP_NOT_PRESENT
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 45 0 * * *
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WMI:QFE | stats values(HotFixID) AS hotfixes BY host | lookup OSLookup host AS host OUTPUT osVersion\
| eval measure="SSP_NOT_PRESENT" | `penalty_lookup`\
| eval hasHotfix=if(match(hotfixes,"KB2859537|KB3045999|KB2264107"),"TRUE","FALSE")\
| eval penalty=if((isnull(osVersion) OR osVersion<6.2) AND (isnull(hotfixes) OR hasHotfix=="FALSE"),penalty_value,0)\
| fillnull value=UNKNOWN osVersion | eval item="OS Version:"+osVersion+", Has Hotfix:"+hasHotfix | eval _time=now() | table host, item, penalty _time

[AE_ASLR_IMPLEMENTATION_WEAK]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ASLR_IMPLEMENTATION_WEAK
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 5 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup | eval measure="ASLR_IMPLEMENTATON_WEAK" | `penalty_lookup` | eval penalty=if(osVersion<6.2 AND osArch!=64,penalty_value,0) | eval item="Version "+osVersion+" - Architecture "+osArch+" bit" | eval _time=now() | table host item penalty _time

[AE_ASLR_CONFIG_WEAK]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ASLR_CONFIG_WEAK
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 5 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management\\moveImages" | dedup host | eval moveImages=data\
| lookup OSLookup host AS host OUTPUT osVersion\
| eval measure="ASLR_CONFIG_WEAK" | `penalty_lookup`\
| eval penalty=if((isnull(osVersion) OR osVersion<6.2) AND moveImages==1,penalty_value,0)\
| fillnull value=UNKNOWN osVersion | eval item="Version:"+osVersion+", MoveImages:"+moveImages | eval _time=now() | table host item penalty _time

[AE_ASLR_DISABLED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ASLR_DISABLED
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 5 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management\\moveImages" | dedup host | eval moveImages=data\
| lookup OSLookup host AS host OUTPUT osVersion\
| eval measure="ASLR_DISABLED" | `penalty_lookup`\
| eval penalty=if((isnull(osVersion) OR osVersion<6.2) AND moveImages==0,penalty_value,0) \
| fillnull value="UNKNOWN" moveImages osVersion | eval item="Version:"+osVersion+", MoveImages:"+moveImages | eval _time=now() | table host item penalty _time

[AE_ASLR_CONFIG_NOT_DEFINED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ASLR_CONFIG_NOT_DEFINED
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 5 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup HostList\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management\\moveImages" | dedup host | eval moveImages=data]\
| lookup OSLookup host AS host OUTPUT osVersion\
| eval measure="ASLR_CONFIG_NOT_DEFINED" | `penalty_lookup`\
| eval penalty=if((isnull(osVersion) OR osVersion<6.2) AND isnull(moveImages),penalty_value,0) \
| fillnull value="UNKNOWN" moveImages osVersion | eval item="Version:"+osVersion+", MoveImages:"+moveImages | eval _time=now() | table host item penalty _time

[AE_CERTPADDING_NOT_ENABLED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = CERTPADDING_NOT_ENABLED
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 5 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup HostList\
| join type=outer host [search sourcetype=WinRegistry key_path="*\\SOFTWARE\\Microsoft\\Cryptography\\WinTrust\\Config\\EnableCertPaddingCheck" | dedup host | eval enableCertPaddingCheck=data]\
| join type=outer host [search sourcetype=WinRegistry key_path="*\\SOFTWARE\\WOW6432NODE\\Microsoft\\Cryptography\\WinTrust\\Config\\EnableCertPaddingCheck" | dedup host | eval enableCertPaddingCheck64=data]\
| lookup OSLookup host AS host OUTPUT osArch\
| eval measure="CERTPADDING_NOT_ENABLED" | `penalty_lookup`\
| eval penalty=if((isnull(enableCertPaddingCheck) OR enableCertPaddingCheck!=1) OR ((isnull(osArch) OR osArch=="64") AND (isnull(enableCertPaddingCheck64) OR enableCertPaddingCheck64!=1)),penalty_value,0)\
| fillnull value="UNKNOWN" enableCertPaddingCheck enableCertPaddingCheck64 osArch | eval item="OS Architecture:"+osArch+", EnableCertPaddingCheck:"+enableCertPaddingCheck+", EnableCertPaddingCheck64:"+enableCertPaddingCheck64 | eval _time=now() | table host item penalty _time

[AVFRS_ARTEMIS_DISABLED_DP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ARTEMIS_DISABLED_DP
action.summary_index.metric = AVFRS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*SOFTWARE\\*MCAFEE\\DESKTOPPROTECTION\\TASKS\\ArtemisEnabled" | dedup host | eval desktopArtemisEnabled=data\
| rex field=desktopArtemisEnabled "0x\d{8}\((?<desktopProtectionEnabledValue>\d*)\)" \
| eval measure="ARTEMIS_DISABLED" | `penalty_lookup`\
| eval penalty=if(desktopProtectionEnabledValue==1,0,penalty_value) | eval item=desktopArtemisEnabled | eval _time=now() | table host, item, penalty _time

[AVFRS_ARTEMIS_DISABLED_ES]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ARTEMIS_DISABLED_ES
action.summary_index.metric = AVFRS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 3 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*SOFTWARE\\*MCAFEE\\SYSTEMCORE\\VSCORE\\EMAIL SCANNER\\ArtemisEnabled" | dedup host | eval emailScannerArtemisEnabled=data\
| rex field=emailScannerArtemisEnabled "0x\d{8}\((?<emailScannerEnabledValue>\d*)\)" \
| eval measure="ARTEMIS_DISABLED" | `penalty_lookup`\
| eval penalty=if(emailScannerEnabledValue==1,0,penalty_value) | eval item=emailScannerArtemisEnabled | eval _time=now() | table host, item, penalty _time

[AVFRS_ARTEMIS_DISABLED_OA]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ARTEMIS_DISABLED_OA
action.summary_index.metric = AVFRS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 6 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*SOFTWARE\\*MCAFEE\\SYSTEMCORE\\VSCORE\\On Access Scanner\\ArtemisEnabled" | dedup host | eval onAccessArtemisEnabled=data\
| rex field=onAccessArtemisEnabled "0x\d{8}\((?<onAccessEnabledValue>\d*)\)" \
| eval measure="ARTEMIS_DISABLED" | `penalty_lookup`\
| eval penalty=if(onAccessEnabledValue==1,0,penalty_value) | eval item=onAccessArtemisEnabled | eval _time=now() | table host, item, penalty _time

[AVFRS_ARTEMIS_DISABLED_OD]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ARTEMIS_DISABLED_OD
action.summary_index.metric = AVFRS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 9 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*SOFTWARE\\*MCAFEE\\SYSTEMCORE\\VSCORE\\EMAIL SCANNER\\OUTLOOK\\ONDELIVERY\\GENERALOPTIONS\\ArtemisEnabled" | dedup host | eval onDeliveryArtemisEnabled=data\
| rex field=onDeliveryArtemisEnabled "0x\d{8}\((?<onDeliveryEnabledValue>\d*)\)" \
| eval measure="ARTEMIS_DISABLED" | `penalty_lookup`\
| eval penalty=if(onDeliveryEnabledValue==1,0,penalty_value) | eval item=onDeliveryArtemisEnabled | eval _time=now() | table host, item, penalty _time

[AVFRS_ARTEMIS_SENSITIVITY_DP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ARTEMIS_SENSITIVITY_DP
action.summary_index.metric = AVFRS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 12 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*SOFTWARE\\*MCAFEE\\DESKTOPPROTECTION\\TASKS\\ArtemisLevel" | dedup host | eval desktopProtectionLevel=data\
| rex field=desktopProtectionLevel "0x\d{8}\((?<desktopProtectionLevelValue>\d*)\)" \
| eval measure="ARTEMIS_SENSITIVITY_LOW" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS lowPenalty\
| eval measure="ARTEMIS_SENSITIVITY_VERY_LOW" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS veryLowPenalty\
| eval penalty=case(desktopProtectionLevelValue==1,lowPenalty,desktopProtectionLevelValue==0,veryLowPenalty,1=1,0) \
| eval item=desktopProtectionLevel | eval _time=now() | table host, item, penalty _time

[AVFRS_ARTEMIS_SENSITIVITY_ES]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ARTEMIS_SENSITIVITY_ES
action.summary_index.metric = AVFRS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 15 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*SOFTWARE\\*MCAFEE\\SYSTEMCORE\\VSCORE\\EMAIL SCANNER\\ArtemisLevel" | dedup host | eval emailScannerLevel=data\
| rex field=emailScannerLevel "0x\d{8}\((?<emailScannerLevelValue>\d*)\)" \
| eval measure="ARTEMIS_SENSITIVITY_LOW" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS lowPenalty\
| eval measure="ARTEMIS_SENSITIVITY_VERY_LOW" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS veryLowPenalty\
| eval penalty=case(emailScannerLevelValue==1,lowPenalty,emailScannerLevelValue==0,veryLowPenalty,1=1,0) \
| eval item=emailScannerLevel | eval _time=now() | table host, item, penalty _time

[AVFRS_ARTEMIS_SENSITIVITY_OD]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ARTEMIS_SENSITIVITY_OD
action.summary_index.metric = AVFRS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 21 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*SOFTWARE\\*MCAFEE\\SYSTEMCORE\\VSCORE\\EMAIL SCANNER\\OUTLOOK\\ONDELIVERY\\GENERALOPTIONS\\ArtemisLevel" | dedup host | eval onDeliveryLevel=data\
| rex field=onDeliveryLevel "0x\d{8}\((?<onDeliveryLevelValue>\d*)\)" \
| eval measure="ARTEMIS_SENSITIVITY_LOW" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS lowPenalty\
| eval measure="ARTEMIS_SENSITIVITY_VERY_LOW" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS veryLowPenalty\
| eval penalty=case(onDeliveryLevelValue==1,lowPenalty,onDeliveryLevelValue==0,veryLowPenalty,1=1,0) \
| eval item=onDeliveryLevel | eval _time=now() | table host, item, penalty _time

[AVFRS_ARTEMIS_SENSITIVITY_OA]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ARTEMIS_SENSITIVITY_OA
action.summary_index.metric = AVFRS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 18 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*SOFTWARE\\*MCAFEE\\SYSTEMCORE\\VSCORE\\On Access Scanner\\ArtemisLevel" | dedup host | eval onAccessLevel=data\
| rex field=onAccessLevel "0x\d{8}\((?<onAccessLevelValue>\d*)\)" \
| eval measure="ARTEMIS_SENSITIVITY_LOW" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS lowPenalty\
| eval measure="ARTEMIS_SENSITIVITY_VERY_LOW" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS veryLowPenalty\
| eval penalty=case(onAccessLevelValue==1,lowPenalty,onAccessLevelValue==0,veryLowPenalty,1=1,0) \
| eval item=onAccessLevel | eval _time=now() | table host, item, penalty _time

[AVFRS_ARTEMIS_SERVER_UNEXPECTED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ARTEMIS_SERVER_UNEXPECTED
action.summary_index.metric = AVFRS
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 24 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=scriptAV dnsQuery=* | stats values(dnsQuery) AS dnsQueries BY host\
| eval measure="ARTEMIS_SERVER_UNEXPECTED" | `penalty_lookup` \
| eval penalty=if(isnull(mvfind(dnsQueries,"127.0.4.8")) AND isnull(mvfind(dnsQueries,"FAILED")),penalty_value,0)\
| eval item=dnsQueries | eval _time=now() | table host, item, penalty _time

[AVFRS_ARTEMIS_SERVER_UNREACHABLE]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = ARTEMIS_SERVER_UNREACHABLE
action.summary_index.metric = AVFRS
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 27 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=scriptAV dnsQuery=* | stats values(dnsQuery) AS dnsQueries BY host\
| eval measure="ARTEMIS_SERVER_UNREACHABLE" | `penalty_lookup` \
| eval penalty=if(isnotnull(mvfind(dnsQueries,"Failed")),penalty_value,0)\
| eval item=dnsQueries | eval _time=now() | table host, item, penalty _time

[AVFRS_VSE_OUTDATED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.metric = AVFRS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 39 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*SOFTWARE\\*MCAFEE\\DesktopProtection\\szProductVer" | dedup host | eval ProductVersion=data | rex field=ProductVersion "(?<V1>\d*)\.(?<V2>\d*)\.(?<V3>\d*)\.(?<V4>\d*)" \
| `get_vse_versions` | rex field=RequiredVersion "(?<RqV1>\d*)\.(?<RqV2>\d*)\.(?<RqV3>\d*)\.(?<RqV4>\d*)" | rex field=RecommendedVersion "(?<RcV1>\d*)\.(?<RcV2>\d*)\.(?<RcV3>\d*)\.(?<RcV4>\d*)" \
| eval measure="VSE_OUTDATED" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS outdatedPenalty\
| eval measure="VSE_VERY_OUTDATED" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS veryOutdatedPenalty\
| eval measure=mvappend("VSE_OUTDATED","VSE_VERY_OUTDATED") | mvexpand measure\
| eval penalty=if(V1>=RqV1 AND V2>=RqV2 AND V3>=RqV3 AND V4>=RqV4,0,if(measure=="VSE_VERY_OUTDATED",veryOutdatedPenalty,0)) \
| eval penalty=case(penalty==veryOutdatedPenalty,penalty,V1>=RcV1 AND V2>=RcV2 AND V3>=RcV3 AND V4>=RcV4,penalty,1=1,if(measure=="VSE_OUTDATED" AND (V1>=RqV1 AND V2>=RqV2 AND V3>=RqV3 AND V4>=RqV4),outdatedPenalty,0))\
| eval item=ProductVersion | eval _time=now() | table measure, host, item, penalty _time

[AVFRS_VSE_SERVICE_NOT_AUTOMATIC]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = VSE_SERVICE_NOT_AUTOMATIC
action.summary_index.metric = AVFRS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 42 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*SYSTEM\\CurrentControlSet\\services\\McShield\\Start" | dedup host | eval McShieldServiceStart=data\
| rex field=McShieldServiceStart "0x\d{8}\((?<McShieldServiceStartdecimal>\d*)\)" \
| eval measure="VSE_SERVICE_NOT_AUTOMATIC" | `penalty_lookup`\
| eval penalty=if(McShieldServiceStartdecimal==2,0,penalty_value) | eval item=McShieldServiceStart | eval _time=now() | table host, item, penalty _time

[AVFRS_VSE_SERVICE_NOT_RUNNING]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = VSE_SERVICE_NOT_RUNNING
action.summary_index.metric = AVFRS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 45 0 * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WinHostMon Name=McShield | dedup host\
| eval measure="VSE_SERVICE_NOT_RUNNING" | `penalty_lookup`\
| eval penalty=if(State=="Running",0,penalty_value) | eval item=State | eval _time=now() | table host, item, penalty _time

[AVFRS_VSE_STARTUP_DISABLED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = VSE_STARTUP_DISABLED
action.summary_index.metric = AVFRS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 48 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*SOFTWARE\\*MCAFEE\\SYSTEMCORE\\VSCORE\\ON ACCESS SCANNER\\McShield\\Configuration\\bStartDisabled" | dedup host | eval onAccessScanAtStartup=data\
| rex field=onAccessScanAtStartup "0x\d{8}\((?<onAccessScanAtStartupValue>\d*)\)" \
| eval measure="VSE_STARTUP_DISABLED" | `penalty_lookup`\
| eval penalty=if(onAccessScanAtStartupValue==0,0,penalty_value) | eval item=onAccessScanAtStartup | eval _time=now() | table host, item, penalty _time

[AW_APPLOCKER_BAD_PUBLISHER]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = APPLOCKER_BAD_PUBLISHER
action.summary_index.metric = AW
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=SrpV2Rules | eval Ukey_path=upper(key_path) | rex field=Ukey_path ".*\\\SOFTWARE\\\POLICIES\\\MICROSOFT\\\WINDOWS\\\SRPV2\\\(?<ruleSet>\w+)\\\(?<key_rule_id>.*)\\\VALUE" | dedup host,key_rule_id, ruleSet | search RuleType=FilePublisherRule Action=Allow (RuleUserOrGroupSid="S-1-1-0" OR RuleUserOrGroupSid="S-1-5-32-545") | rex field=RuleConditionPub mode=sed s/\"\*\"/WILDCARD/ | eval measure="APPLOCKER_BAD_PUBLISHER" | `penalty_lookup` | eval penalty=if(RuleConditionPub="WILDCARD",penalty_value,0) | eval item=ruleSet+" - "+RuleId+" - "+RuleConditionPub | eval _time=now() | table host, item, penalty _time

[AW_APPLOCKER_NO_USERPROFILE_RULES]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = APPLOCKER_NO_USERPROFILE_RULES
action.summary_index.metric = AW
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 6 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=SrpV2Rules | eval Ukey_path=upper(key_path) | rex field=Ukey_path ".*\\\SOFTWARE\\\POLICIES\\\MICROSOFT\\\WINDOWS\\\SRPV2\\\(?<ruleSet>\w+)\\\(?<key_rule_id>.*)\\\VALUE" | dedup host,key_rule_id, ruleSet | search RuleType=FilePathRule Action=Allow (RuleUserOrGroupSid="S-1-1-0" OR RuleUserOrGroupSid="S-1-5-32-545") RuleConditionPath="\"%OSDRIVE%\\Users\\*\"" | eval item=ruleSet+" - "+RuleConditionPath | eval measure="APPLOCKER_NO_USERPROFILE_RULES" | `penalty_lookup` | eval penalty=penalty_value | eval _time=now() | table host, item, penalty _time

[AW_APPLOCKER_RULESET_NOT_ENFORCED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = APPLOCKER_RULESET_NOT_ENFORCED
action.summary_index.metric = AW
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 12 0 * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" earliest=-2y key_path="*\\SOFTWARE\\Policies\\Microsoft\\Windows\\SrpV2\\*\\EnforcementMode*" | eval Ukey_path=upper(key_path) | rex field=Ukey_path ".*\\\SOFTWARE\\\POLICIES\\\MICROSOFT\\\WINDOWS\\\SRPV2\\\(?<RuleCategory>.*)\\\ENFORCEMENTMODE" | dedup host, RuleCategory | eval measure="APPLOCKER_RULESET_NOT_ENFORCED" | `penalty_lookup` | rex field=data "0x\d{8}\((?<enforcementMode>\d)\)" | eval penalty=if(enforcementMode!=1,penalty_value,0) | eval item=RuleCategory | eval _time=now() | table host, item, penalty _time

[AW_APPLOCKER_SERVICE_NOT_AUTOMATIC]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = APPLOCKER_SERVICE_NOT_AUTOMATIC
action.summary_index.metric = AW
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 15 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup HostList\
| join type=outer host [search source="WinRegistry" sourcetype="WinRegistry" key_path="\\REGISTRY\\MACHINE\\SYSTEM\\CurrentControlSet\\services\\appidsvc\\Start" | dedup host | eval AppIdSvcStart=data] \
| fillnull value="UNKNOWN" AppIdSvcStart\
| rex field=AppIdSvcStart "0x\d{8}\((?<AppIdSvcStartdecimal>\d*)\)" \
| eval measure="APPLOCKER_SERVICE_NOT_AUTOMATIC" | `penalty_lookup`\
| eval penalty=if(AppIdSvcStartdecimal==2,0,penalty_value) | eval item=AppIdSvcStart | eval _time=now() | table host, item, penalty _time

[AW_APPLOCKER_SERVICE_NOT_RUNNING]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = APPLOCKER_SERVICE_NOT_RUNNING
action.summary_index.metric = AW
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 18 0 * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup HostList\
| join type=outer host [search sourcetype=WinHostMon source=Services Name=AppIDSvc | dedup host]\
| fillnull value="UNKNOWN" State\
| eval measure="APPLOCKER_SERVICE_NOT_RUNNING" | `penalty_lookup`\
| eval penalty=if(State=="Running",0,penalty_value) | eval item=State | eval _time=now() | table host, item, penalty _time

[AW_APPLOCKER_RULESET_NOT_CONFIGURED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = APPLOCKER_RULESET_NOT_CONFIGURED
action.summary_index.metric = AW
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 9 0 * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" earliest=-2y key_path="*\\SOFTWARE\\Policies\\Microsoft\\Windows\\SrpV2\\*" key_path!="*value" | eval Ukey_path=upper(key_path) | rex field=Ukey_path ".*\\\SOFTWARE\\\POLICIES\\\MICROSOFT\\\WINDOWS\\\SRPV2\\\(?<RuleCategory>.*)" | rex field=RuleCategory "(?<RCat>.*)\\\[A-Z0-9]*" | eval RC=if(isnull(RCat),RuleCategory,RCat) | eval RC=rtrim(RC,"\\") | dedup host, RC | search registry_type!="DeleteKey" RuleCategory!="*ENFORCEMENTMODE" | eval item=RC | eval measure="APPLOCKER_RULESET_NOT_CONFIGURED" | `penalty_lookup` | eval penalty=penalty_value | lookup hostList.csv host as host output host as currentHost | search currentHost=* | eval _time=now() | table host, item, penalty _time

[AW_SRP_SCOPE_USERS_ONLY]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SRP_SCOPE_USERS_ONLY
action.summary_index.metric = AW
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 39 0 * * *
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*\\software\\policies\\microsoft\\windows\\safer\\codeidentifiers\\PolicyScope" | dedup host | eval SRPPolicyScope=data | rex field=SRPPolicyScope "0x\d{8}\((?<SRPPolicyScopedecimal>\d*)\)"  | eval measure="SRP_SCOPE_USERS_ONLY" | `penalty_lookup` | eval penalty=if(SRPPolicyScopedecimal==0,0,penalty_value) | eval item=SRPPolicyScope | eval _time=now() | table host, item, penalty _time

[AW_SRP_BINARIES_EXE_ONLY]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SRP_BINARIES_EXE_ONLY
action.summary_index.metric = AW
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 21 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*\\software\\policies\\microsoft\\windows\\safer\\codeidentifiers\\TransparentEnabled"  | dedup host | eval SRPTransparentEnabled=data | rex field=SRPTransparentEnabled "0x\d{8}\((?<SRPTransparentEnableddecimal>\d*)\)" | eval measure="SRP_BINARIES_EXE_ONLY" | `penalty_lookup` | eval penalty=if(SRPTransparentEnableddecimal==1,penalty_value,0) | eval item=SRPTransparentEnabled | eval _time=now() | table host, item, penalty _time

[AW_SRP_BINARIES_NONE]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SRP_BINARIES_NONE
action.summary_index.metric = AW
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 24 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*\\software\\policies\\microsoft\\windows\\safer\\codeidentifiers\\TransparentEnabled"  | dedup host | eval SRPTransparentEnabled=data | rex field=SRPTransparentEnabled "0x\d{8}\((?<SRPTransparentEnableddecimal>\d*)\)" | eval measure="SRP_BINARIES_NONE" | `penalty_lookup` | eval penalty=if(SRPTransparentEnableddecimal==0,penalty_value,0) | eval item=SRPTransparentEnabled | eval _time=now() | table host, item, penalty _time

[AW_SRP_NOT_WHITELISTING]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SRP_NOT_WHITELISTING
action.summary_index.metric = AW
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 33 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*\\software\\policies\\microsoft\\windows\\safer\\codeidentifiers\\DefaultLevel" | dedup host | eval SRPDefaultLevel=data | rex field=SRPDefaultLevel "0x\d{8}\((?<SRPDefaultLeveldecimal>\d*)\)" | eval measure="SRP_NOT_WHITELISTING" | `penalty_lookup` | eval penalty=if(SRPDefaultLeveldecimal==0,0,penalty_value) | eval item=SRPDefaultLevel | eval _time=now() | table host, item, penalty _time

[AW_SRP_RULE_NOT_ENFORCED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SRP_RULE_NOT_ENFORCED
action.summary_index.metric = AW
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 36 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
display.visualizations.type = singlevalue
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*\\software\\policies\\microsoft\\windows\\safer\\codeidentifiers\\*\\Paths\\*\\SaferFlags" | dedup host, data, key_path | eval SaferFlags=data | search (SaferFlags="0x00001000(4096)" OR SaferFlags="0x00020000(131072)") | eval key_path=lower(key_path) | rex field=key_path ".*\\\paths\\\(?<ruleId>\{.*\})\\\saferflags" | join type=outer host,ruleId [search sourcetype="WinRegistry" key_path="*\\software\\policies\\microsoft\\windows\\safer\\codeidentifiers\\*\\Paths\\*\\ItemData" | eval key_path=lower(key_path) | rex field=key_path ".*\\\paths\\\(?<ruleId>\{.*\})\\\itemdata" | eval ruleName=data] | eval item=ruleName + " - " + SaferFlags | eval measure="SRP_RULE_NOT_ENFORCED" | `penalty_lookup` | eval penalty=penalty_value | eval _time=now() | table host, item, penalty _time

[AW_SRP_WHITELIST_RULE_MISSING]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SRP_WHITELIST_RULE_MISSING
action.summary_index.metric = AW
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 42 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
display.visualizations.type = singlevalue
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = |inputlookup hostList.csv | map [|inputlookup SRP-whitelistPath.csv | eval host="$host$"]  maxsearches=1000 | join type=outer host, WhitelistedPath [search sourcetype="WinRegistry" key_path="*\\software\\policies\\microsoft\\windows\\safer\\codeidentifiers\\262144\\*\\ItemData" | dedup host, data | eval WhitelistedPath=lower(data) | fields host, WhitelistedPath, key_path] | fillnull key_path | eval measure="SRP_WHITELIST_RULE_MISSING" | `penalty_lookup` | eval penalty=if(key_path==0,penalty_value,0) | eval item=WhitelistedPath | eval _time=now() | table host, item, penalty _time

[HBSS_HIPS_NOT_PREVENTING_HIGH]
action.email.reportServerEnabled = 0
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = HIPS_NOT_PREVENTING_HIGH
action.summary_index.metric = HBSS
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 20 0 * * *
dispatch.earliest_time = 0
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = search
search = index=regmon source="WinRegistry" sourcetype="WinRegistry" key_path="*WOW6432NODE\\MCAFEE\\HIP\\Config\\Settings\\IPS_ReactionForHigh*" | dedup host\
| eval IPS_ReactionForHigh=data \
| rex field=IPS_ReactionForHigh "0x\d{8}\((?<IPS_ReactionForHighdecimal>\d*)\)" \
| eval measure="HIPS_NOT_PREVENTING_HIGH" | `penalty_lookup`\
| eval penalty=if(IPS_ReactionForHighdecimal==3,0,penalty_value) \
| eval item=IPS_ReactionForHigh \
| fillnull value="Unknown" item\
| sort -penalty by host\
| eval _time=now() | table host, item, penalty _time

[HBSS_HIPS_NOT_LOGGING_LOW]
action.email.reportServerEnabled = 0
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = HIPS_NOT_LOGGING_LOW
action.summary_index.metric = HBSS
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 15 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*WOW6432NODE\\MCAFEE\\HIP\\Config\\Settings\\IPS_ReactionForLow" | dedup host\
| eval IPS_ReactionForLow=data \
| rex field=IPS_ReactionForLow "0x\d{8}\((?<IPS_ReactionForLowdecimal>\d*)\)" \
| eval measure="HIPS_NOT_LOGGING_LOW" | `penalty_lookup`\
| eval penalty=if(IPS_ReactionForLowdecimal<3,0,penalty_value) \
| eval item=IPS_ReactionForLow \
| fillnull value="Unknown" item\
| sort -penalty by host\
| eval _time=now() | table host, item, penalty _time

[HBSS_HIPS_NOT_INSTALLED]
action.email.reportServerEnabled = 0
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = HIPS_NOT_INSTALLED
action.summary_index.metric = HBSS
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 10 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = search
search = sourcetype=WinHostMon source=Services Name=enterceptAgent | dedup host\
| eval measure="HIPS_NOT_INSTALLED" | `penalty_lookup`\
| eval penalty=if(State=="Running",0,if(State=="Stopped",0,penalty_value)) \
| eval item=State \
| fillnull value="Not Installed" item\
| sort -penalty by host\
| eval _time=now() | table host, item, penalty _time

[HBSS_HIPS_NOT_ENFORCING]
action.email.reportServerEnabled = 0
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = HIPS_NOT_ENFORCING
action.summary_index.metric = HBSS
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 5 0 * * *
dispatch.earliest_time = 0
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*WOW6432NODE\\MCAFEE\\HIP\\Config\\Settings\\IPS_AuditModeEnabled*" | dedup host\
| eval IPS_AuditModeEnabled=data \
| rex field=IPS_AuditModeEnabled "0x\d{8}\((?<IPS_AuditModeEnableddecimal>\d*)\)" \
| eval measure="HIPS_NOT_ENFORCING" | `penalty_lookup`\
| eval penalty=if(IPS_AuditModeEnableddecimal==0,0,penalty_value) \
| eval item=IPS_AuditModeEnabled \
| fillnull value="Unknown" item\
| sort -penalty by host\
| eval _time=now() | table host, item, penalty _time

[HBSS_HIPS_NOT_ENABLED]
action.email.reportServerEnabled = 0
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = HIPS_NOT_ENABLED
action.summary_index.metric = HBSS
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = 0
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*WOW6432NODE\\MCAFEE\\HIP\\Config\\Settings\\IPS_HipsEnabled*" | dedup host\
| eval IPS_HipsEnabled=data \
| rex field=IPS_HipsEnabled "0x\d{8}\((?<IPS_HipsEnableddecimal>\d*)\)" \
| eval measure="HIPS_NOT_ENABLED" | `penalty_lookup`\
| eval penalty=if(IPS_HipsEnableddecimal==1,0,penalty_value)\
| eval item=IPS_HipsEnabled\
| fillnull value="Unknown" item\
| sort -penalty by host\
| eval _time=now() | table host, item, penalty _time

[AW_SRP_MISSING_EXE_TYPE]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SRP_MISSING_EXE_TYPE
action.summary_index.metric = AW
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 30 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = |inputlookup hostList.csv | map [|inputlookup  SRP-defaultExeTypes.csv | eval host="$host$"] maxsearches=1000 | eval ExecutableTypes=Type | join type=outer host, ExecutableTypes [search sourcetype="WinRegistry" key_path="*\\software\\policies\\microsoft\\windows\\safer\\codeidentifiers\\ExecutableTypes" | dedup host | eval ExecutableTypes=data | rex field=ExecutableTypes mode=sed "s/\n/:/g" |rex field=ExecutableTypes mode=sed "s/\s//g" | makemv delim=":" ExecutableTypes | mvexpand ExecutableTypes | fields host, key_path, ExecutableTypes] | fillnull key_path | eval measure="SRP_MISSING_EXE_TYPE" | `penalty_lookup` | eval penalty=if(key_path==0,penalty_value,0) | eval item=ExecutableTypes | eval _time=now() | table host, item, penalty _time

[AW_SRP_BLACKLIST_RULE_MISSING]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SRP_BLACKLIST_RULE_MISSING
action.summary_index.metric = AW
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 27 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup hostList.csv | map [|inputlookup SRP-blacklistPath.csv | eval host="$host$"]  maxsearches=1000 | join type=outer host, BlacklistedPath [search sourcetype="WinRegistry" key_path="*\\software\\policies\\microsoft\\windows\\safer\\codeidentifiers\\0\\*\\ItemData" | dedup host, data | eval BlacklistedPath=lower(data) | eval host=upper(host) | fields host, BlacklistedPath, key_path] | fillnull key_path | eval measure="SRP_BLACKLIST_RULE_MISSING" | `penalty_lookup` | eval penalty=if(key_path==0,penalty_value,0) | eval item=BlacklistedPath | eval _time=now() | table host, item, penalty _time

[HBSS_HIPS_SERVICE_NOT_AUTOMATIC]
action.email.reportServerEnabled = 0
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = HIPS_SERVICE_NOT_AUTOMATIC
action.summary_index.metric = HBSS
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 30 0 * * *
dispatch.earliest_time = 0
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*services\\enterceptAgent\\Start*" | dedup host\
| eval HIPSServiceStart=data | rex field=HIPSServiceStart "0x\d{8}\((?<HIPSServiceStartdecimal>\d*)\)" \
| eval measure="HIPS_SERVICE_NOT_AUTOMATIC" | `penalty_lookup`\
| eval penalty=if(HIPSServiceStartdecimal==2,0,penalty_value) \
| eval item=HIPSServiceStart \
| fillnull value="Unknown" item\
| sort -penalty by host\
| eval _time=now() | table host, item, penalty _time

[HBSS_UPDATE_HIPS]
action.email.reportServerEnabled = 0
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.metric = HBSS
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 40 0 * * *
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*WOW6432NODE\\MCAFEE\\HIP\\Version*" | dedup host\
| eval Version=data\
| `get_hips_version`\
| rex field=Version "(?<V1>\d*)\.(?<V2>\d*)\.(?<V3>\d*)\.(?<V4>\d*)"\
| rex field=RecommendedVersion "(?<RcV1>\d*)\.(?<RcV2>\d*)\.(?<RcV3>\d*)\.(?<RcV4>\d*)"\
| rex field=RequiredVersion "(?<RqV1>\d*)\.(?<RqV2>\d*)\.(?<RqV3>\d*)\.(?<RqV4>\d*)"\
| eval measure="UPDATE_HIPS" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS outdatedPenalty\
| eval measure="UPDATE_HIPS_OLD" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS veryOutdatedPenalty\
| eval measure=mvappend("UPDATE_HIPS","UPDATE_HIPS_OLD") | mvexpand measure\
| eval penalty=if(V1>=RqV1 AND V2>=RqV2 AND V3>=RqV3 AND V4>=RqV4,0,if(measure=="UPDATE_HIPS_OLD",veryOutdatedPenalty,0)) \
| eval penalty=case(penalty==veryOutdatedPenalty,penalty,V1>=RcV1 AND V2>=RcV2 AND V3>=RcV3 AND V4>=RcV4,penalty,1=1,if(measure=="UPDATE_HIPS" AND (V1>=RqV1 AND V2>=RqV2 AND V3>=RqV3 AND V4>=RqV4),outdatedPenalty,0))\
| eval item=Version | eval _time=now() | table measure, host, item, penalty _time

[HBSS_HIPS_NOT_PREVENTING_MEDIUM]
action.email.reportServerEnabled = 0
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = HIPS_NOT_PREVENTING_MEDIUM
action.summary_index.metric = HBSS
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 25 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*WOW6432NODE\\MCAFEE\\HIP\\Config\\Settings\\IPS_ReactionForMedium*" | dedup host\
| eval IPS_ReactionForMedium=data \
| rex field=IPS_ReactionForMedium "0x\d{8}\((?<IPS_ReactionForMediumdecimal>\d*)\)" \
| eval measure="HIPS_NOT_PREVENTING_MEDIUM" | `penalty_lookup`\
| eval penalty=if(IPS_ReactionForMediumdecimal!=3,0,penalty_value) \
| eval item=IPS_ReactionForMedium \
| fillnull value="Unknown" item\
| sort -penalty by host\
| eval _time=now() | table host, item, penalty _time

[HBSS_HIPS_SERVICE_NOT_RUNNING]
action.email.reportServerEnabled = 0
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = HIPS_SERVICE_NOT_RUNNING
action.summary_index.metric = HBSS
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 35 0 * * *
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = search
search = sourcetype=WinHostMon source=Services Name=enterceptAgent | dedup host\
| eval measure="HIPS_SERVICE_NOT_RUNNING" | `penalty_lookup`\
| eval penalty=if(State=="Running",0,penalty_value) \
| eval item=State \
| fillnull value="Unknown" item\
| sort -penalty by host\
| eval _time=now() | table host, item, penalty _time

[HBSS_UPDATE_HIPS_CONTENT]
action.email.reportServerEnabled = 0
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = UPDATE_HIPS_CONTENT
action.summary_index.metric = HBSS
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 45 0 * * *
description = For Summary Indexing
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*WOW6432NODE\\MCAFEE\\HIP\\ContentCreated*" | dedup host\
| eval ContentCreated=data\
| eval dataCollectionDate=strftime(_time,"%Y/%m/%d")\
| convert timeformat="%Y/%m/%d" mktime(dataCollectionDate) AS dataCollectionDateEpoch\
| convert timeformat="%A,%B %d, %Y" mktime(ContentCreated) AS ContentCreatedEpoch\
| eval nowepoch=now()\
| eval age=round((nowepoch-ContentCreatedEpoch)/86400,0)\
| eval measure="UPDATE_HIPS_CONTENT" | `penalty_lookup`\
| eval penalty=if(age<=30,0,penalty_value)\
| eval item=age\
| fillnull value="Unknown"\
| sort -penalty by host\
| eval _time=now() | table host, ContentCreated, dataCollectionDate, item, penalty _time

[AE_FONT_BLOCKING_IS_DISABLED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = FONT_BLOCKING_IS_DISABLED
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 15 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WinRegistry key_path="*SOFTWARE\\POLICIES\\MICROSOFT\\WINDOWS NT\\MitigationOptions\\MitigationOptions_FontBocking" | dedup host | rex field=data "(?<fontBlocking>\d)\d{12}" | eval measure="FONT_BLOCKING_IS_DISABLED" | `penalty_lookup` | eval penalty=if(fontBlocking==1,0,penalty_value) | eval item=data | eval _time=now() | table host item penalty _time

[MODERN_OS]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.metric = MOS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WMI:OperatingSystem" | dedup host | rex field=Version "(?<osVersion>\d*\.\d*)\.\d*" | rename ServicePackMajorVersion as ServicePack\
| eval measure="UNSUPPORTED_SP_WINVISTA" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS UNSUPPORTED_SP_WINVISTA_penalty\
| eval measure="UNSUPPORTED_SP_WIN7" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS UNSUPPORTED_SP_WIN7_penalty\
| eval measure="UNSUPPORTED_OS" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS UNSUPPORTED_OS_penalty\
| eval measure="UPGRADE_TO_WIN81" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS UPGRADE_TO_WIN81_penalty\
| eval measure="UPGRADE_TO_WIN8" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS UPGRADE_TO_WIN8_penalty\
| eval measure="UPGRADE_TO_WIN7" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS UPGRADE_TO_WIN7_penalty\
| eval measure="UPGRADE_TO_WIN10" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS UPGRADE_TO_WIN10_penalty\
| eval measure=mvappend("UPGRADE_TO_WIN10","UPGRADE_TO_WIN81","UPGRADE_TO_WIN8","UNSUPPORTED_SP_WIN7","UPGRADE_TO_WIN7","UNSUPPORTED_SP_WINVISTA","UNSUPPORTED_OS")\
| mvexpand measure\
| eval penalty=case(\
osVersion>=10,0,\
osVersion==6.3,if(measure=="UPGRADE_TO_WIN10",UPGRADE_TO_WIN10_penalty,0),\
osVersion==6.2,if(measure=="UPGRADE_TO_WIN81",UPGRADE_TO_WIN81_penalty,0),\
osVersion==6.1 AND ServicePack>=1,if(measure=="UPGRADE_TO_WIN8",UPGRADE_TO_WIN8_penalty,0),\
osVersion==6.1 AND ServicePack<1,if(measure=="UNSUPPORTED_SP_WIN7",UNSUPPORTED_SP_WIN7_penalty,0),\
osVersion==6.0 AND ServicePack>=2,if(measure=="UPGRADE_TO_WIN7",UPGRADE_TO_WIN7_penalty,0),\
osVersion==6.0 AND ServicePack<2,if(measure=="UNSUPPORTED_SP_WINVISTA",UNSUPPORTED_SP_WINVISTA_penalty,0),\
osVersion<=5.2,if(measure=="UNSUPPORTED_OS",UNSUPPORTED_OS_penalty,0),\
isnull(osVersion) OR isnull(ServicePack),if(measure=="UNSUPPORTED_OS",UNSUPPORTED_OS_penalty,0)) \
| eval item=case(isnull(osVersion) AND isnull(ServicePack),"Unknown OS Version/ServicePack",isnull(osVersion),"Unknown OS Version",isnull(ServicePack),"Unknown Service Pack",1=1,"Version - "+osVersion+" - Service Pack - "+ServicePack) | eval _time=now() | table measure, host, item, penalty _time

[PtH_CONFIGURE_EVENT_LOG]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = CONFIGURE_EVENT_LOG
action.summary_index.metric = PtH
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = -3d@d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = |inputlookup HostList | join type=outer host [search sourcetype="WinEventLog:Security" EventCode=4624 | fields ComputerName,EventCode | dedup ComputerName | rex field=ComputerName "(?<host>[\w]*)\..*" | eval host=upper(host)] | eval measure="CONFIGURE_EVENT_LOG" | `penalty_lookup` | eval penalty=if(EventCode==4624,0,penalty_value) | eval item=if(EventCode==4624,"-","No logon events") | eval _time=now() | table host, item, penalty _time

[MISSING_DATA]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = MISSING_DATA
action.summary_index.metric = MISSING_DATA
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 23 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = |inputlookup hostList.csv | join type=outer host [search index="_internal" source="*metrics.lo*" earliest=-48h group=tcpin_connections NOT eventType=* | eval host=if(isnull(hostname), sourceHost,hostname) | eval lastReceived = case(kb>0, _time) | stats first(sourceIp) as sourceIp  max(_time) as lastConnected max(lastReceived) as lastReceived by host guid | addinfo | eval status = if(lastConnected<(info_max_time-86400),"missing","active") | eval lastConnected=strftime(lastConnected,"%m/%d/%y %H:%M:%S") | eval lastReceived=strftime(lastReceived,"%m/%d/%y %H:%M:%S") | eval host=upper(host)] | fillnull value="missing" status | eval item=status | eval penalty=if(status="active",0,100) | eval _time=now() | table host, item, penalty _time

[PtH_DOMAIN_ADMIN_LOGON_SERVER]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = DOMAIN_ADMIN_LOGON_SERVER
action.summary_index.metric = PtH
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = -3d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinEventLog:Security" EventCode=4624 | mvexpand Account_Name | dedup Account_Name, ComputerName, _time | join type=inner Account_Name [search sourcetype=dcList | dedup SamAccountName | eval Account_Name=SamAccountName ] | rex field=ComputerName "(?<host>\w*)\..*" | lookup os_lookup.csv host as host output osRole | search osRole=Server | eval measure="DOMAIN_ADMIN_LOGON_SERVER" | `penalty_lookup`\
| eval penalty=penalty_value | eval timestamp=strftime(_time,"%y/%m/%d %H:%M:%S") | eval item=distinguishedName+" : "+timestamp | eval _time=now() | table host, item, penalty _time

[PtH_DOMAIN_ADMIN_LOGON_WORKSTATION]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = DOMAIN_ADMIN_LOGON_WORKSTATION
action.summary_index.metric = PtH
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = -3d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinEventLog:Security" EventCode=4624 | mvexpand Account_Name | dedup Account_Name, ComputerName, _time | join type=inner Account_Name [search sourcetype=dcList | dedup SamAccountName | eval Account_Name=SamAccountName |search (Account_Name!=sharepoint AND Account_Name!=WSConnector)] | rex field=ComputerName "(?<host>\w*)\..*" | lookup os_lookup.csv host as host output osRole | search osRole=Workstation | eval measure="DOMAIN_ADMIN_LOGON_WORKSTATION" | `penalty_lookup`\
| eval penalty=penalty_value | eval timestamp=strftime(_time,"%y/%m/%d %H:%M:%S") | eval item=distinguishedName+" : "+timestamp | eval _time=now() | table host, item, penalty _time

[AE_KSEHOP_NOT_CONFIGURED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = KSEHOP_NOT_CONFIGURED
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 25 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel\\KernelSEHOPEnabled" | dedup host | eval kse=data]\
| eval measure="KSEHOP_NOT_CONFIGURED" | `penalty_lookup`\
| eval penalty=if(osArch!=64 AND isnull(kse),penalty_value,0) \
| fillnull value="UNKNOWN" kse | eval item="Architecture:"+osArch+", KernelSEHOPEnabled:"+kse | eval _time=now() | table host, item, penalty _time

[AE_KSEHOP_IS_DISABLED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = KSEHOP_IS_DISABLED
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 20 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel\\KernelSEHOPEnabled" | dedup host | eval kse=data | rex field=kse "0x\d*\((?<kseValue>\d)\)"] | fillnull kseValue\
| eval measure="KSEHOP_IS_DISABLED" | `penalty_lookup`| eval penalty=if(osArch!=64 AND kseValue!=1,penalty_value,0) \
| fillnull value="UNKNOWN" kse | eval item="Architecture:"+osArch+", KernelSEHOPEnabled:"+kse | eval _time=now() | table host, item, penalty _time

[AE_SEHOP_IS_DISABLED_WIN8]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SEHOP_IS_DISABLED_WIN8
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 40 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel\\MitigationOptions" | dedup host | eval mitOps=data | rex field=mitOps "0x\d*(?<mitOpsValue>\d)\d\(\d*\)"] | fillnull mitOpsValue\
| eval measure="SEHOP_IS_DISABLED_WIN8" | `penalty_lookup`\
| eval penalty=if(osVersion>=6.2 AND mitOpsValue%4==2,penalty_value,0) \
| fillnull value="UNKNOWN" mitOps | eval item="Version:"+osVersion+", MitigationOptions:"+mitOps | eval _time=now() | table host, item, penalty _time

[AE_MISSING_DATA]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = MISSING_DATA
action.summary_index.metric = AE
alert.digest_mode = True
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 00 02 * * *
description = Search to capture hosts that are missing one or more measures for AE
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = index=sami_summary metric=MISSING_DATA | eval host=upper(orig_host) | search item="active" | dedup host | lookup OSLookup host as host output osVersion,osRole | search osRole=* osVersion=* \
| join type=outer max=0 host [| inputlookup SAMIPenaltiesLookup | search metric=AE measure!=MISSING_DATA measure!=NP_IS_DISABLED | stats values(measure) as allMeasures by metric \
| join type=outer max=0 measure [search index=sami_summary metric=AE measure!=MISSING_DATA | eval host=upper(orig_host) | stats values(measure) as hostMeasures by host | fields host hostMeasures] \
| join type=outer [search index=sami_summary metric=AE measure=ASLR_CONFIG_NOT_DEFINED | eval host=upper(orig_host) | eval aslrConfigPenalty=penalty | fields host aslrConfigPenalty]\
| join type=outer [search index=sami_summary metric=AE measure=OS_OUTDATED_FOR_FONT_BLOCKING | eval host=upper(orig_host) | eval fontBlockingOSPenalty=penalty | fields host fontBlockingOSPenalty]\
| join type=outer [search index=sami_summary metric=AE measure=OS_NO_SECURE_BOOT | eval host=upper(orig_host) | eval secureBootOSPenalty=penalty | fields host secureBootOSPenalty]\
| eval allMeasures=if(aslrConfigPenalty>0,mvfilter(NOT match(allMeasures,"ASLR_CONFIG_WEAK|ASLR_DISABLED")),allMeasures)\
| eval allMeasures=if(fontBlockingOSPenalty>0,mvfilter(NOT match(allMeasures,"FONT_BLOCKING_IS_DISABLED|FONT_BLOCKING_MO_IS_DISABLED")),allMeasures)\
| eval allMeasures=if(secureBootOSPenalty>0,mvfilter(NOT match(allMeasures,"LEGACY_BIOS|SECURE_BOOT_NOT_ENABLED")),allMeasures)\
| mvexpand allMeasures | eval missing=if(isnull(mvfind(hostMeasures,allMeasures)),allMeasures,"None") | where missing!="None" | fields host metric missing] \
| search metric!=MISSING_DATA | eval measure=missing | `penalty_lookup`\
| stats values(missing) as item sum(penalty_value) as penalty by host | eval penalty=min(penalty,100) | eval _time=now() | table host, item, penalty _time

[AVFRS_MISSING_DATA]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = MISSING_DATA
action.summary_index.metric = AVFRS
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 2 * * *
description = Search to capture hosts that are missing one or more AVFRS measures.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = index=sami_summary metric=MISSING_DATA | eval host=upper(orig_host) | search item="active" | dedup host | lookup OSLookup host as host output osVersion,osRole | search osRole=* osVersion=* | join type=outer max=0 host [| inputlookup SAMIPenaltiesLookup | search metric=AVFRS | search measure!=MISSING_DATA measure!=ARTEMIS_SENSITIVITY_LOW AND measure!=ARTEMIS_SENSITIVITY_VERY_LOW | stats values(measure) as allMeasures by metric | join type=outer max=0 measure [search index=sami_summary metric=AVFRS measure!=MISSING_DATA | eval host=upper(orig_host) | stats values(measure) as hostMeasures by host | fields host hostMeasures] | mvexpand allMeasures | eval missing=if(isnull(mvfind(hostMeasures,allMeasures)),allMeasures,"None") | where missing!="None" | fields host metric missing] | search metric!=MISSING_DATA \
| eval measure=missing | `penalty_lookup`\
| stats values(missing) as item sum(penalty_value) as penalty by host | eval penalty=min(penalty,100) | eval _time=now() | table host, item, penalty _time

[HBSS_MISSING_DATA]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = MISSING_DATA
action.summary_index.metric = HBSS
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 2 * * *
description = Search to capture hosts that are missing one or more HBSS measures.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = index=sami_summary metric=MISSING_DATA | eval host=upper(orig_host) | search item="active" | dedup host | lookup OSLookup host as host output osVersion,osRole | search osRole=* osVersion=* | join type=outer max=0 host [| inputlookup SAMIPenaltiesLookup | search metric=HBSS | search measure!=MISSING_DATA | stats values(measure) as allMeasures by metric | join type=outer max=0 measure [search index=sami_summary metric=HBSS measure!=MISSING_DATA | eval host=upper(orig_host) | stats values(measure) as hostMeasures by host | fields host hostMeasures] | mvexpand allMeasures | eval missing=if(isnull(mvfind(hostMeasures,allMeasures)),allMeasures,"None") | where missing!="None" | fields host metric missing] | search metric!=MISSING_DATA| eval measure=missing | `penalty_lookup`\
| stats values(missing) as item sum(penalty_value) as penalty by host | eval penalty=min(penalty,100) | eval _time=now() | table host, item, penalty _time

[MISSING_DATA_METRIC]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 00 2 * * *
description = Captures hosts that are active but not reporting for a certain metric.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = index=sami_summary metric=MISSING_DATA | eval host=upper(orig_host) | search item="active" | dedup host | lookup OSLookup host as host output osVersion,osRole | search osRole=* osVersion=* | join type=outer max=0 host [| inputlookup SAMIPenaltiesLookup | search metric!=MISSING_DATA | stats values(metric) as allMetrics | join type=outer max=0 metric [search index=sami_summary measure!=MISSING_DATA | eval host=upper(orig_host) | stats values(metric) as hostMetrics by host | fields host hostMetrics] | mvexpand allMetrics | eval missing=if(isnull(mvfind(hostMetrics,allMetrics)),allMetrics,"None") | where missing!="None" | fields host missing] | where missing!="OSPD" \
| eval metric=missing | eval measure="MISSING_DATA" | eval item="Missing "+metric+" metric" | eval penalty=100 | eval _time=now() | table metric measure host item penalty _time

[MODERN_OS_MISSING_DATA]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = MISSING_DATA
action.summary_index.metric = MOS
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 2 * * *
description = Search to capture hosts that are missing one or more MOS measures.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = index=sami_summary metric=MISSING_DATA | eval host=upper(orig_host) | search item="active" | dedup host | lookup OSLookup host as host output osVersion,osRole | search osRole=* osVersion=* | join type=outer max=0 host [| inputlookup SAMIPenaltiesLookup | search metric=MOS | search measure!=MISSING_DATA measure!="IS_WIN10" | stats values(measure) as allMeasures by metric | join type=outer max=0 measure [search index=sami_summary metric=MOS measure!=MISSING_DATA | eval host=upper(orig_host) | stats values(measure) as hostMeasures by host | fields host hostMeasures] | mvexpand allMeasures | eval missing=if(isnull(mvfind(hostMeasures,allMeasures)),allMeasures,"None") | where missing!="None" | fields host metric missing] | search metric!=MISSING_DATA | eval measure=missing | `penalty_lookup`\
| stats values(missing) as item sum(penalty_value) as penalty by host | eval penalty=min(penalty,100) | eval _time=now() | table host, item, penalty _time

[PtH_MISSING_DATA]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = MISSING_DATA
action.summary_index.metric = PtH
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 2 * * *
description = Captures hosts missing one of the PtH measures.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = index=sami_summary metric=MISSING_DATA | eval host=upper(orig_host) | search item="active" | dedup host | lookup OSLookup host as host output osVersion,osRole | search osRole=* osVersion=* | join type=outer max=0 host [| inputlookup SAMIPenaltiesLookup | search metric=PtH | search measure!=BLOCK_W2W_TRAFFIC measure!=DOMAIN_ADMIN_LOGON_SERVER measure!=DOMAIN_ADMIN_LOGON_WORKSTATION | stats values(measure) as allMeasures by metric | join type=outer max=0 measure [search index=sami_summary metric=PtH | eval host=upper(orig_host) | stats values(measure) as hostMeasures by host | fields host hostMeasures] | mvexpand allMeasures | eval missing=if(isnull(mvfind(hostMeasures,allMeasures)),allMeasures,"None") | where missing!="None" | fields host metric missing] | search metric!=MISSING_DATA | eval measure=missing | `penalty_lookup`\
| stats values(missing) as item sum(penalty_value) as penalty by host | eval penalty=min(penalty,100) | eval _time=now() | table host, item, penalty _time

[AW_MISSING_DATA]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = MISSING_DATA
action.summary_index.metric = AW
alert.digest_mode = True
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 2 * * *
description = Search to capture hosts missing one or more AW measures.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = index=sami_summary metric=MISSING_DATA | eval host=upper(orig_host) | search item="active" | dedup host | lookup OSLookup host as host output osVersion,osRole | search osRole=* osVersion=* | join type=outer max=0 host [| inputlookup SAMIPenaltiesLookup | search metric=AW | search measure!=MISSING_DATA measure!=APPLOCKER_BAD_PUBLISHER measure!=APPLOCKER_NO_BLACKLIST_RULES measure!=APPLOCKER_NO_USERPROFILE_RULES measure!=NO_WHITELISTING | stats values(measure) as allMeasures by metric | join type=outer max=0 measure [search index=sami_summary metric=AW measure!=MISSING_DATA | eval host=upper(orig_host) | stats values(measure) as hostMeasures by host | fields host hostMeasures] | mvexpand allMeasures | eval missing=if(isnull(mvfind(hostMeasures,allMeasures)),allMeasures,"None") | where missing!="None" | fields host metric missing]\
| `skip_aw_category(missing,host)`| search metric!=MISSING_DATA \
| eval measure=missing | `penalty_lookup`\
| stats values(missing) as item sum(penalty_value) as penalty by host | eval penalty=min(penalty,100) | eval _time=now() | table host, item, penalty _time

[Missing Measures Per Host]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = index=sami_summary metric!=MISSING_DATA measure=MISSING_DATA | makemv delim=" " item | table orig_host metric item | sort orig_host metric

[AVFRS_DAT_OUTDATED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.metric = AVFRS
alert.digest_mode = True
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 33 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*SOFTWARE\\*MCAFEE\\AVENGINE\\AVDatDate" | dedup host | eval AVDataDate=data\
| convert timeformat="%Y/%m/%d" mktime(AVDataDate) AS AVDataDateEpoch | eval age=round((now()-AVDataDateEpoch)/86400,0) \
| eval measure="DAT_OUTDATED" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS outdatedPenalty\
| eval measure="DAT_VERY_OUTDATED" | lookup SAMIPenaltiesLookup measure AS measure OUTPUT penalty AS veryOutdatedPenalty\
| eval measure=mvappend("DAT_OUTDATED","DAT_VERY_OUTDATED") | mvexpand measure\
| eval penalty=case(age>7,if(measure=="DAT_VERY_OUTDATED",veryOutdatedPenalty,0),age>2,if(measure=="DAT_OUTDATED",outdatedPenalty,0),1=1,0) | eval item=AVDataDate\
| eval _time=now() | table measure, host, item, penalty _time

[AW_APPLOCKER_BLACKLIST_RULE_MISSING]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = APPLOCKER_BLACKLIST_RULE_MISSING
action.summary_index.metric = AW
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 3 0 * * *
description = Searches for AppLocker rules missing from the hosts
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = |inputlookup hostList.csv\
| map [|inputlookup AW_BlacklistedPath_lookup |fields BlacklistedPath| join [|inputlookup AW_ruleSet_lookup | search ruleSet="script" ]|eval host="$host$"\
| join type=outer host, BlacklistedPath [search sourcetype=SrpV2Rules | eval Ukey_path=upper(key_path) \
\
| rex field=Ukey_path ".*\\\SOFTWARE\\\POLICIES\\\MICROSOFT\\\WINDOWS\\\SRPV2\\\(?<rule_category>.*)\\\(?<key_rule_id>.*)\\\VALUE" | search RuleType=FilePathRule Action=Allow (RuleUserOrGroupSid="S-1-1-0" OR RuleUserOrGroupSid="S-1-5-32-545") RuleConditionPath="\"%WINDIR%\\*\"" RuleExceptions=* | rex field=RuleExceptions mode=sed s/\<Exceptions\>// | rex field=RuleExceptions mode=sed s/\<\/Exceptions\>// | rex field=RuleExceptions mode=sed s/\<FilePathCondition\sPath=\"//g | rex field=RuleExceptions mode=sed s/\"\///g\
\
| makemv delim=">" RuleExceptions | mvexpand RuleExceptions | eval BlacklistedPath=upper(RuleExceptions) | eval host=upper(host) | eval keyRule=key_rule_id | stats values(rule_category) as RuleCategory by host key_rule_id BlacklistedPath RuleName]\
\
| appendpipe [|inputlookup AW_BlacklistedPath_lookup |fields BlacklistedPath| join [|inputlookup AW_ruleSet_lookup | search ruleSet="EXE" ]|eval host="$host$"\
| join type=outer host, BlacklistedPath [search sourcetype=SrpV2Rules | eval Ukey_path=upper(key_path) | `parse_aw_rule` | makemv delim=">" RuleExceptions | mvexpand RuleExceptions | eval BlacklistedPath=upper(RuleExceptions) | eval host=upper(host) | eval keyRule=key_rule_id | stats values(rule_category) as RuleCategory by host key_rule_id BlacklistedPath RuleName]]\
\
| appendpipe [|inputlookup AW_BlacklistedPath_lookup |fields BlacklistedPath| join [|inputlookup AW_ruleSet_lookup | search ruleSet="dll" ]|eval host="$host$"\
| join type=outer host, BlacklistedPath [search sourcetype=SrpV2Rules | eval Ukey_path=upper(key_path) | `parse_aw_rule` | makemv delim=">" RuleExceptions | mvexpand RuleExceptions | eval BlacklistedPath=upper(RuleExceptions) | eval host=upper(host) | eval keyRule=key_rule_id | stats values(rule_category) as RuleCategory by host key_rule_id BlacklistedPath RuleName]]\
\
| appendpipe [|inputlookup AW_BlacklistedPath_lookup |fields BlacklistedPath| join [|inputlookup AW_ruleSet_lookup | search ruleSet="msi" ]|eval host="$host$"\
| join type=outer host, BlacklistedPath [search sourcetype=SrpV2Rules | eval Ukey_path=upper(key_path) | `parse_aw_rule` | makemv delim=">" RuleExceptions | mvexpand RuleExceptions | eval BlacklistedPath=upper(RuleExceptions) | eval host=upper(host) | eval keyRule=key_rule_id | stats values(rule_category) as RuleCategory by host key_rule_id BlacklistedPath RuleName]]\
\
] maxsearches=1000\
\
| eval measure="APPLOCKER_BLACKLIST_RULE_MISSING" | `penalty_lookup` | eval penalty=if(isnull(RuleCategory) OR mvcount(RuleCategory)<4,penalty_value,0) | eval ruleSet=upper(ruleSet) \
\
| eval item=if(isnull(RuleName), "RuleSet:".ruleSet." "."Path:".BlacklistedPath,"RuleSet:".ruleSet." "."Path:".BlacklistedPath." "."RuleName:".RuleName )\
\
\
| eval _time=now() | table host, item, penalty, _time

[AE_SEHOP_IS_DISABLED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = SEHOP_IS_DISABLED
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 40 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup OSLookup\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\kernel\\DisableExceptionChainValidation" | eval host=upper(host) | dedup host | eval decv=data | rex field=decv "0x\d*\((?<decvValue>\d)\)"]\
| eval measure="SEHOP_IS_DISABLED" | `penalty_lookup`| eval penalty=if(osVersion<6.2 AND (isnull(decvValue) OR decvValue!=0),penalty_value,0) \
| fillnull value=UNKNOWN decv osVersion | eval item="Version:"+osVersion+", DisableExceptionChainValidation:"+decv | eval _time=now() | table host, item, penalty _time

[AE_APP_DOES_NOT_SUPPORT_SEHOP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = APP_DOES_NOT_SUPPORT_SEHOP
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WinRegistry key_path="*SOFTWARE\\*Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options*DisableExceptionChainValidation" | eval key_path=upper(key_path) | dedup host key_path | eval decv=data | rex field=decv "0x\d*\((?<decvValue>\d)\)" | rex field=key_path ".*\\\(?<appName>[^\\\]*)\\\DISABLEEXCEPTIONCHAINVALIDATION" | fillnull value=UNKNOWN decvValue\
| lookup OSLookup host AS host OUTPUT osVersion\
| eval measure="APP_DOES_NOT_SUPPORT_SEHOP" | `penalty_lookup`\
| eval penalty=if((isnull(osVersion) OR osVersion<6.2) AND decvValue!=0,penalty_value,0)\
| eval item=appName | eval _time=now() | table host item penalty _time

[AE_CERTPADDING_NOT_EXIST]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = CERTPADDING_NOT_EXIST
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 10 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = | inputlookup HostList\
| join type=outer host [search sourcetype=WinRegistry key_path="*\\SOFTWARE\\Microsoft\\Cryptography\\WinTrust\\Config\\EnableCertPaddingCheck" | dedup host | eval enableCertPaddingCheck=data]\
| join type=outer host [search sourcetype=WinRegistry key_path="*\\SOFTWARE\\WOW6432NODE\\Microsoft\\Cryptography\\WinTrust\\Config\\EnableCertPaddingCheck" | dedup host | eval enableCertPaddingCheck64=data]\
| lookup OSLookup host AS host OUTPUT osArch\
| eval measure="CERTPADDING_NOT_EXIST" | `penalty_lookup`\
| eval penalty=if(isnull(enableCertPaddingCheck) OR (osArch=="64" AND isnull(enableCertPaddingCheck64)),penalty_value,0)\
| fillnull value="UNKNOWN" enableCertPaddingCheck enableCertPaddingCheck64 osArch | eval item="OS Architecture:"+osArch+", EnableCertPaddingCheck:"+enableCertPaddingCheck+", EnableCertPaddingCheck64:"+enableCertPaddingCheck64 | eval _time=now() | table host item penalty _time

[AE_CFG_NOT_PRESENT]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = CFG_NOT_PRESENT
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 10 0 * * *
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WMI:QFE | stats values(HotFixID) AS hotfixes BY host | eval host=upper(host)\
| lookup OSLookup host AS host OUTPUT osVersion \
| eval measure="CFG_NOT_PRESENT" | `penalty_lookup`\
| eval hasHotfix=if(match(hotfixes,"KB3000850"),"TRUE","FALSE")\
| eval penalty=if(osVersion==10.0 AND hasHotfix!="TRUE",penalty_value,0)\
| eval item="OS Version:"+osVersion+", Has Hotfix KB3000850:"+hasHotfix | eval _time=now() | table host item penalty _time

[AE_CFG_DISABLED_MO_FOR_OS]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = CFG_DISABLED_MO_FOR_OS
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 10 0 * * *
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WMI:QFE | stats values(HotFixID) AS hotfixes BY host | eval host=upper(host)\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel\\MitigationOptions" | eval host=upper(host) | dedup host | eval mitOps=data | rex field=mitOps "0x\d*(?<cfgMitOpsValue>\d)\d{10}\(\d*\)" | rex field=mitOps "0x\d*\((?<mitOpsDecimalValue>\d*)\)"]\
| lookup OSLookup host AS host OUTPUT osVersion \
| eval measure="CFG_DISABLED_MO_FOR_OS" | `penalty_lookup`\
| eval hasHotfix=if(match(hotfixes,"KB3000850"),"TRUE","FALSE")\
| eval penalty=if(((osVersion==6.3 AND hasHotfix=="TRUE") OR osVersion>=10.0) AND (tonumber(mitOpsDecimalValue)>=1099511627776 AND cfgMitOpsValue!=1),penalty_value,0)\
| fillnull value="UNKNOWN" mitOps\
| eval item="OS Version:"+osVersion+", Has Hotfix KB3000850:"+hasHotfix+", MitigationOptions:"+mitOps | eval _time=now() | table host item penalty _time

[AE_CFG_DISABLED_FOR_OS]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = CFG_DISABLED_FOR_OS
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 10 0 * * *
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=WMI:QFE | stats values(HotFixID) AS hotfixes BY host | eval host=upper(host)\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management\\EnableCfg" | eval host=upper(host)| dedup host | eval enableCfg=data]\
| lookup OSLookup host AS host OUTPUT osVersion \
| eval measure="CFG_DISABLED_FOR_OS" | `penalty_lookup`\
| eval hasHotfix=if(match(hotfixes,"KB3000850"),"TRUE","FALSE")\
| eval penalty=if(((osVersion==6.3 AND hasHotfix=="TRUE") OR osVersion>=10.0) AND (enableCfg!=1 OR isnull(enableCfg)),penalty_value,0)\
| fillnull value="UNKNOWN" enableCfg \
| eval item="OS Version:"+osVersion+", Has Hotfix KB3000850:"+hasHotfix+", EnableCfg:"+enableCfg | eval _time=now() | table host item penalty _time

[AVFRS_AV_ENGINE_OUTDATED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.metric = AVFRS
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 30 0 * * *
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype="WinRegistry" key_path="*SOFTWARE\\*MCAFEE\\AVEngine\\EngineVersionMajor" | dedup host | eval MajVersion=data\
| join type=outer host [search sourcetype="WinRegistry" key_path="*SOFTWARE\\*MCAFEE\\AVEngine\\EngineVersionMinor" | dedup host | eval MinVersion=data]\
| fillnull value="UNKNOWN" MajVersion MinVersion\
| `get_required_av_engine_version`\
| rex field=MajVersion "0x[0-9|a-f]{8}\((?<MajVersiondecimal>\d*)\)" | rex field=MinVersion "0x[0-9|a-f]{8}\((?<MinVersiondecimal>\d*)\)" \
| eval measure="AV_ENGINE_OUTDATED" | `penalty_lookup`\
| eval measure=mvappend("AV_ENGINE_OUTDATED","AV_ENGINE_VERY_OUTDATED") | mvexpand measure\
| eval penalty=if(MajVersiondecimal>=RequiredVersionMaj AND MinVersiondecimal>=RequiredVersionMin,0,if(measure=="AV_ENGINE_OUTDATED",penalty_value,0)) \
| eval item=if(MajVersion=="UNKNOWN" OR MinVersion=="UNKNOWN","UNKNOWN",MajVersiondecimal+"."+MinVersiondecimal) | eval _time=now() | table measure, host, item, penalty _time

[hostList_lookup]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.digest_mode = True
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 30 2 * * *
dispatch.earliest_time = -24h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=hostList | sort hostName | eval host=hostName  | table host  | outputlookup hostList.csv

[AE_APP_DOES_NOT_SUPPORT_ASLR]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = APP_DOES_NOT_SUPPORT_ASLR
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=scriptAE aslr=* | eval aslr=upper(aslr) | dedup host aslr | eval aslrEnabled=if(match(aslr,"ASLR ENABLED"),"True","False") | rex field=aslr "(?P<appPath>.*):\s"\
| lookup OSLookup host AS host OUTPUT osVersion\
| eval measure="APP_DOES_NOT_SUPPORT_ASLR" | `penalty_lookup`\
| eval penalty=if((isnull(osVersion) OR osVersion<6.2) AND aslrEnabled=="False",penalty_value,0) \
| eval item=appPath | eval _time=now() | table host item penalty _time

[AE_APP_OPTED_OUT_FROM_DEP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = APP_OPTED_OUT_FROM_DEP
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=scriptAE dep=* | eval dep=upper(dep) | dedup host dep | eval is32Bit=if(match(dep,"PROGRAM FILES \\(X86\\)"),"True","False") | eval depEnabled=if(match(dep,"DEP ENABLED"),"True","False") | where is32Bit=="True" | rex field=dep "(?P<appPath>.*):\s" | rex field=appPath ".*\\\(?P<appName>.*)" \
| join type=outer appPath host [search sourcetype=WinRegistry key_path="*SOFTWARE*\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Layers*" | eval key_path=upper(key_path) | dedup host key_path | rex field=key_path "MICROSOFT\\\WINDOWS NT\\\CURRENTVERSION\\\APPCOMPATFLAGS\\\LAYERS\\\(?P<appPath>.*)" | eval appCompat=data | fields host appPath appCompat] \
| join type=outer appName host [search sourcetype=WinRegistry key_path="*SOFTWARE*\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*mitigationOptions*" | eval key_path=upper(key_path) | dedup host key_path | rex field=key_path ".*\\\(?P<appName>.+)\\\MITIGATIONOPTIONS" | rex field=data "0x\d*(?<appMitOps>\d)\(\d*\)" | eval appMitOps=tonumber(appMitOps) | fields host appMitOps]\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\SystemStartOptions*" | rex field=data ".*=(?<depPolicy>\w+)" | fields host depPolicy]\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel\\MitigationOptions" | dedup host | rex field=data "0x\d*(?<sysMitOps>\d)\(\d*\)" | eval sysMitOps=tonumber(sysMitOps) | fields host sysMitOps]\
| fillnull appMitOps sysMitOps\
| fillnull value="UNKNOWN" appCompat depPolicy\
| eval measure="APP_OPTED_OUT_FROM_DEP" | `penalty_lookup`\
| eval penalty=if(depPolicy=="OPTOUT" AND (appCompat=="DISABLENXHIDEUI" OR appCompat=="DISABLENXSHOWUI"),penalty_value,0)\
| eval penalty=if(depPolicy!="ALWAYSON" AND floor(sysMitOps/4)%2==0 AND (sysMitOps%4==0 OR appMitOps%4==0),penalty,0)\
| eval item=appPath | eval _time=now() | table host item penalty _time

[AE_APP_NOT_OPTED_IN_FOR_DEP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = APP_NOT_OPTED_IN_FOR_DEP
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=scriptAE dep=* | eval dep=upper(dep) | dedup host dep | eval is32Bit=if(match(dep,"PROGRAM FILES \\(X86\\)"),"True","False") | eval depEnabled=if(match(dep,"DEP ENABLED"),"True","False") | where is32Bit=="True" | rex field=dep "(?P<appPath>.*):\s" | rex field=appPath ".*\\\(?P<appName>.*)" \
| join type=outer appName host [search sourcetype=WinRegistry key_path="*SOFTWARE*\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*executeOptions*" | eval key_path=upper(key_path) | dedup host key_path | rex field=key_path ".*\\\(?P<appName>.+)\\\executeOptions" | rex field=data "0x\d*(?<appExecOps>\d)\(\d*\)" | eval appExecOps=tonumber(appExecOps) | fields host appExecOps]\
| join type=outer appName host [search sourcetype=WinRegistry key_path="*SOFTWARE*\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*mitigationOptions*" | eval key_path=upper(key_path) | dedup host key_path | rex field=key_path ".*\\\(?P<appName>.+)\\\MITIGATIONOPTIONS" | rex field=data "0x\d*(?<appMitOps>\d)\(\d*\)" | eval appMitOps=tonumber(appMitOps) | fields host appMitOps]\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\SystemStartOptions*" | rex field=data ".*=(?<depPolicy>\w+)" | fields host depPolicy]\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel\\MitigationOptions" | dedup host | rex field=data "0x\d*(?<sysMitOps>\d)\(\d*\)" | eval sysMitOps=tonumber(sysMitOps) | fields host sysMitOps]\
| fillnull value=UNKNOWN appExecOps depPolicy | fillnull appMitOps sysMitOps\
| eval measure="APP_NOT_OPTED_IN_FOR_DEP" | `penalty_lookup`\
| eval penalty=if(depPolicy=="OPTIN" AND depEnabled=="False" AND appExecOps!="0",penalty_value,0)\
| eval penalty=if(depPolicy!="ALWAYSON" AND floor(sysMitOps/4)%2==0 AND (sysMitOps%4==0 OR appMitOps%4==0),penalty,0)\
| eval item=appPath | eval _time=now() | table host item penalty _time

[AE_DEP_OVERRIDDEN_FOR_APP]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = DEP_OVERRIDDEN_FOR_APP
action.summary_index.metric = AE
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 15 0 * * *
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=scriptAE dep=* | eval dep=upper(dep) | dedup host dep | eval is32Bit=if(match(dep,"PROGRAM FILES \\(X86\\)"),"True","False") | eval depEnabled=if(match(dep,"DEP ENABLED"),"True","False") | where is32Bit=="True" | rex field=dep "(?P<appPath>.*):\s" | rex field=appPath ".*\\\(?P<appName>.*)"\
| join type=outer appName host [search sourcetype=WinRegistry key_path="*SOFTWARE*\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\*mitigationOptions*" | eval key_path=upper(key_path) | dedup host key_path | rex field=key_path ".*\\\(?P<appName>.+)\\\MITIGATIONOPTIONS" | rex field=data "0x\d*(?<appMitOps>\d)\(\d*\)" | eval appMitOps=tonumber(appMitOps) | fields host appMitOps]\
| join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel\\MitigationOptions" | dedup host | rex field=data "0x\d*(?<sysMitOps>\d)\(\d*\)" | eval sysMitOps=tonumber(sysMitOps) | fields host sysMitOps]\
| fillnull appMitOps sysMitOps\
| eval measure="DEP_OVERRIDDEN_FOR_APP" | `penalty_lookup`\
| eval penalty=if(appMitOps%4==2,penalty_value,0) | eval penalty=if(floor(sysMitOps/4)%2==0,penalty,0)\
| eval item=appPath | eval _time=now() | table host item penalty _time

[AE_NP_NOT_PRESENT]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = NP_NOT_PRESENT
action.summary_index.metric = AE
alert.digest_mode = True
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 25 0 * * *
dispatch.earliest_time = -7d@d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=scriptAE ableToMapNullPage=* | dedup host | join type=outer host [search sourcetype=WMI:QFE | stats values(HotFixID) AS hotfixes BY host | fields host hotfixes]\
| lookup OSLookup host AS host OUTPUT osVersion\
| eval hasHotfixes=if(match(hotfixes,"KB3035131|KB3045999|KB3000483|KB3031432|KB3023266|KB2839229|KB2859537|KB2872339|KB2829361|KB3033395|KB2813170"),"True","False")\
| eval measure="NP_NOT_PRESENT" | `penalty_lookup`\
| eval penalty=if((ableToMapNullPage=="True" OR isnull(ableToMapNullPage)) AND (osVersion==6.1 OR isnull(osVersion)) AND hasHotfixes=="False",penalty_value,0)\
| fillnull value="UNKNOWN" ableToMapNullPage osVersion | eval item="ableToMapNullPage:"+ableToMapNullPage+", osVersion:"+osVersion+", hotfixes:"+hasHotfixes | eval _time=now() | table host, item, penalty _time

[AE_NP_NOT_CONFIGURED]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = sami_summary
action.summary_index.measure = NP_NOT_CONFIGURED
action.summary_index.metric = AE
alert.digest_mode = True
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 25 0 * * *
dispatch.earliest_time = -7d@d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = radialGauge
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = sami
request.ui_dispatch_view = search
search = sourcetype=scriptAE ableToMapNullPage=* | dedup host | join type=outer host [search sourcetype=WinRegistry key_path="*SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management\\EnableLowVaAccess*" | rex field=data "0x\d*(?<enableLowVaAccess>\d)"] | fillnull enableLowVaAccess | join type=outer host [search sourcetype=WMI:QFE | stats values(HotFixID) as hotfix by host | fields host, hotfix]  | lookup OSLookup host AS host OUTPUT osVersion | eval measure="NP_NOT_CONFIGURED" | `penalty_lookup` | eval hasHotfixes=if(match(hotfix,"KB3035131|KB3045999|KB3000483|KB3031432|KB3023266|KB2839229|KB2859537|KB2872339|KB2829361|KB3033395|KB2813170"),"True","False") | eval penalty=if((ableToMapNullPage=="True" OR isnull(ableToMapNullPage)) AND (isnull(osVersion) OR osVersion==6.1) AND (enableLowVaAccess!=0 OR isnull(enableLowVaAccess)) AND hasHotfixes=="False",penalty_value,0) | nomv hotfix | fillnull value="UNKNOWN" enableLowVaAccess osVersion ableToMapNullPage hotfix | eval item="ableToMapNullPage:"+ableToMapNullPage+", osVersion:"+osVersion+", enableLowVaAccess:"+enableLowVaAccess+", Hotfixes:"+hasHotfixes | eval _time=now() | table host, item, penalty _time
